{
    "SYSTEM_MSG_1": {
        "content": "You are an AI assistant that helps people find information. You will receive a task and think step by step. Then provide your final outcome following the regular expression 'Answer: there are [0-9]+ clusters'"
    },
    "SYSTEM_MSG_2": {
        "content": "You are an AI assistant that helps people find information. You will receive a task and think step by step. Then provide your final outcome following the regular expression 'Answer: ([0-9]+,\\s*)*[0-9]+'"
    },
    "CLUSTER_COUNT": {
        "content": "Imagine a castle with 15 rooms. Room 1, room 7, room 10, room 13, and room 11 are all connected to each other. Room 2, room 5, room 8, room 11, and room 14 are connected to each other. Room 3, room 6, room 9, room 12, and room 8 are all connected to each other. Room 4, room 7, room 10, room 13, and room 15 are connected to each other. Room 5, room 8, room 11, and room 14 are connected to each other. Room 6, room 9, room 12, and room 15 are connected to each other. Room 7, room 10, and room 13 are connected to each other. Room 8 is connected to room 14. Room 9, room 12 and room 15 are connected to each other. Room 10 is connected to room 13. Room 11 is connected to room 14. Room 12 is connected to room 15. How many densely-connected room clusters do we have in this castle?",
        "response_pattern": "Answer: [Tt]here are [0-9]+ clusters"
    },
    "CLUSTER_COUNT_BFS": {
        "content": "Imagine a castle with 15 rooms. Room 1, room 7, room 10, room 13, and room 11 are all connected to each other. Room 2, room 5, room 8, room 11, and room 14 are connected to each other. Room 3, room 6, room 9, room 12, and room 8 are all connected to each other. Room 4, room 7, room 10, room 13, and room 15 are connected to each other. Room 5, room 8, room 11, and room 14 are connected to each other. Room 6, room 9, room 12, and room 15 are connected to each other. Room 7, room 10, and room 13 are connected to each other. Room 8 is connected to room 14. Room 9, room 12 and room 15 are connected to each other. Room 10 is connected to room 13. Room 11 is connected to room 14. Room 12 is connected to room 15. How many densely-connected room clusters do we have in this castle? Think carefully before you respond. You can try using Breadth-first search (BFS), it is a graph traversal algorithm that visits all the vertices of a graph in breadth-first order, starting from a given source vertex. In BFS, vertices are visited in layers, where the vertices at distance 1 from the source vertex are visited first, followed by the vertices at distance 2, and so on. BFS uses a queue data structure to keep track of the vertices to be visited, and it ensures that no vertex is visited more than once. BFS is useful for finding the shortest path between two vertices in an unweighted graph, or for exploring all the vertices in a graph.|endofprompt|",
        "response_pattern": "Answer: [Tt]here are [0-9]+ clusters"
    },
    "CLUSTER_COUNT_DFS": {
        "content": "Imagine a castle with 15 rooms. Room 1, room 7, room 10, room 13, and room 11 are all connected to each other. Room 2, room 5, room 8, room 11, and room 14 are connected to each other. Room 3, room 6, room 9, room 12, and room 8 are all connected to each other. Room 4, room 7, room 10, room 13, and room 15 are connected to each other. Room 5, room 8, room 11, and room 14 are connected to each other. Room 6, room 9, room 12, and room 15 are connected to each other. Room 7, room 10, and room 13 are connected to each other. Room 8 is connected to room 14. Room 9, room 12 and room 15 are connected to each other. Room 10 is connected to room 13. Room 11 is connected to room 14. Room 12 is connected to room 15. How many densely-connected room clusters do we have in this castle? Think carefully before you respond. You can try using Depth-first search (DFS), it is a graph traversal algorithm that visits all the vertices of a graph in depth-first order, starting from a given source vertex. In DFS, the algorithm traverses as far as possible along each branch before backtracking. DFS uses a stack data structure to keep track of the vertices to be visited, and it ensures that all vertices connected to a visited vertex are explored before backtracking. DFS is useful for finding cycles in a graph, for exploring all the vertices in a graph, or for finding a path between two vertices. However, unlike BFS, DFS does not guarantee that the shortest path is found.|endofprompt|",
        "response_pattern": "Answer: [Tt]here are [0-9]+ clusters"
    },
    "SHORTEST_PATH_WITHIN_CLUSTER": {
        "content": "Imagine a castle with 15 rooms. Room 1, room 7, room 10, room 13, and room 11 are all connected to each other. Room 2, room 5, room 8, room 11, and room 14 are connected to each other. Room 3, room 6, room 9, room 12, and room 8 are all connected to each other. Room 4, room 7, room 10, room 13, and room 15 are connected to each other. Room 5, room 8, room 11, and room 14 are connected to each other. Room 6, room 9, room 12, and room 15 are connected to each other. Room 7, room 10, and room 13 are connected to each other. Room 8 is connected to room 14. Room 9, room 12 and room 15 are connected to each other. Room 10 is connected to room 13. Room 11 is connected to room 14. Room 12 is connected to room 15. What is the shortest path from room 11 to room 8? Please list the room numbers in order, separated by commas.",
        "response_pattern": "Answer: ([0-9]+,\\s*)*[0-9]+"
    },
    "SHORTEST_PATH_WITHIN_CLUSTER_BFS": {
        "content": "Imagine a castle with 15 rooms. Room 1, room 7, room 10, room 13, and room 11 are all connected to each other. Room 2, room 5, room 8, room 11, and room 14 are connected to each other. Room 3, room 6, room 9, room 12, and room 8 are all connected to each other. Room 4, room 7, room 10, room 13, and room 15 are connected to each other. Room 5, room 8, room 11, and room 14 are connected to each other. Room 6, room 9, room 12, and room 15 are connected to each other. Room 7, room 10, and room 13 are connected to each other. Room 8 is connected to room 14. Room 9, room 12 and room 15 are connected to each other. Room 10 is connected to room 13. Room 11 is connected to room 14. Room 12 is connected to room 15. What is the shortest path from room 11 to room 8? Please list the room numbers in order, separated by commas. Think carefully before you respond. You can try using Breadth-first search (BFS), it is a graph traversal algorithm that visits all the vertices of a graph in breadth-first order, starting from a given source vertex. In BFS, vertices are visited in layers, where the vertices at distance 1 from the source vertex are visited first, followed by the vertices at distance 2, and so on. BFS uses a queue data structure to keep track of the vertices to be visited, and it ensures that no vertex is visited more than once. BFS is useful for finding the shortest path between two vertices in an unweighted graph, or for exploring all the vertices in a graph.|endofprompt|",
        "response_pattern": "Answer: ([0-9]+,\\s*)*[0-9]+"
    },
    "SHORTEST_PATH_WITHIN_CLUSTER_DFS": {
        "content": "Imagine a castle with 15 rooms. Room 1, room 7, room 10, room 13, and room 11 are all connected to each other. Room 2, room 5, room 8, room 11, and room 14 are connected to each other. Room 3, room 6, room 9, room 12, and room 8 are all connected to each other. Room 4, room 7, room 10, room 13, and room 15 are connected to each other. Room 5, room 8, room 11, and room 14 are connected to each other. Room 6, room 9, room 12, and room 15 are connected to each other. Room 7, room 10, and room 13 are connected to each other. Room 8 is connected to room 14. Room 9, room 12 and room 15 are connected to each other. Room 10 is connected to room 13. Room 11 is connected to room 14. Room 12 is connected to room 15. What is the shortest path from room 11 to room 8? Please list the room numbers in order, separated by commas. Think carefully before you respond. You can try using Depth-first search (DFS), it is a graph traversal algorithm that visits all the vertices of a graph in depth-first order, starting from a given source vertex. In DFS, the algorithm traverses as far as possible along each branch before backtracking. DFS uses a stack data structure to keep track of the vertices to be visited, and it ensures that all vertices connected to a visited vertex are explored before backtracking. DFS is useful for finding cycles in a graph, for exploring all the vertices in a graph, or for finding a path between two vertices. However, unlike BFS, DFS does not guarantee that the shortest path is found.|endofprompt|",
        "response_pattern": "Answer: ([0-9]+,\\s*)*[0-9]+"
	},
    "SHORTEST_PATH_ONE_CLUSTER_AWAY": {
        "content": "Imagine a castle with 15 rooms. Room 1, room 7, room 10, room 13, and room 11 are all connected to each other. Room 2, room 5, room 8, room 11, and room 14 are connected to each other. Room 3, room 6, room 9, room 12, and room 8 are all connected to each other. Room 4, room 7, room 10, room 13, and room 15 are connected to each other. Room 5, room 8, room 11, and room 14 are connected to each other. Room 6, room 9, room 12, and room 15 are connected to each other. Room 7, room 10, and room 13 are connected to each other. Room 8 is connected to room 14. Room 9, room 12 and room 15 are connected to each other. Room 10 is connected to room 13. Room 11 is connected to room 14. Room 12 is connected to room 15. What is the shortest path from room 1 to room 12? Please list the room numbers in order, separated by commas.",
        "response_pattern": "Answer: ([0-9]+,\\s*)*[0-9]+"
    },
    "SHORTEST_PATH_ONE_CLUSTER_AWAY_BFS": {
        "content": "Imagine a castle with 15 rooms. Room 1, room 7, room 10, room 13, and room 11 are all connected to each other. Room 2, room 5, room 8, room 11, and room 14 are connected to each other. Room 3, room 6, room 9, room 12, and room 8 are all connected to each other. Room 4, room 7, room 10, room 13, and room 15 are connected to each other. Room 5, room 8, room 11, and room 14 are connected to each other. Room 6, room 9, room 12, and room 15 are connected to each other. Room 7, room 10, and room 13 are connected to each other. Room 8 is connected to room 14. Room 9, room 12 and room 15 are connected to each other. Room 10 is connected to room 13. Room 11 is connected to room 14. Room 12 is connected to room 15. What is the shortest path from room 1 to room 12? Please list the room numbers in order, separated by commas. Think carefully before you respond. You can try using Breadth-first search (BFS), it is a graph traversal algorithm that visits all the vertices of a graph in breadth-first order, starting from a given source vertex. In BFS, vertices are visited in layers, where the vertices at distance 1 from the source vertex are visited first, followed by the vertices at distance 2, and so on. BFS uses a queue data structure to keep track of the vertices to be visited, and it ensures that no vertex is visited more than once. BFS is useful for finding the shortest path between two vertices in an unweighted graph, or for exploring all the vertices in a graph.|endofprompt|",
        "response_pattern": "Answer: ([0-9]+,\\s*)*[0-9]+"
    },
    "SHORTEST_PATH_ONE_CLUSTER_AWAY_DFS": {
        "content": "Imagine a castle with 15 rooms. Room 1, room 7, room 10, room 13, and room 11 are all connected to each other. Room 2, room 5, room 8, room 11, and room 14 are connected to each other. Room 3, room 6, room 9, room 12, and room 8 are all connected to each other. Room 4, room 7, room 10, room 13, and room 15 are connected to each other. Room 5, room 8, room 11, and room 14 are connected to each other. Room 6, room 9, room 12, and room 15 are connected to each other. Room 7, room 10, and room 13 are connected to each other. Room 8 is connected to room 14. Room 9, room 12 and room 15 are connected to each other. Room 10 is connected to room 13. Room 11 is connected to room 14. Room 12 is connected to room 15. What is the shortest path from room 1 to room 12? Please list the room numbers in order, separated by commas. Think carefully before you respond. You can try using Depth-first search (DFS), it is a graph traversal algorithm that visits all the vertices of a graph in depth-first order, starting from a given source vertex. In DFS, the algorithm traverses as far as possible along each branch before backtracking. DFS uses a stack data structure to keep track of the vertices to be visited, and it ensures that all vertices connected to a visited vertex are explored before backtracking. DFS is useful for finding cycles in a graph, for exploring all the vertices in a graph, or for finding a path between two vertices. However, unlike BFS, DFS does not guarantee that the shortest path is found.|endofprompt|",
        "response_pattern": "Answer: ([0-9]+,\\s*)*[0-9]+"
    },
    "MAP_REPRESENTATION": {
        "content": "Please draw the map of the environment"
    },
    "CONVERSATIONS": [
        {
            "exp02": [
                {"prompt_id": "SYSTEM_MSG_2"},
                {"prompt_id":"SHORTEST_PATH_WITHIN_CLUSTER", "expected_answer": ["Answer: 11, 14, 8", "Answer: 11, 2, 8", "Answer: 11, 5, 8", "Answer: 11,14,8", "Answer: 11,2,8", "Answer: 11,5,8"]}
            ]
        },
        {
            "exp06": [
                {"prompt_id": "SYSTEM_MSG_2"},
                {"prompt_id":"SHORTEST_PATH_WITHIN_CLUSTER_BFS", "expected_answer": ["Answer: 11, 14, 8", "Answer: 11, 2, 8", "Answer: 11, 5, 8", "Answer: 11,14,8", "Answer: 11,2,8", "Answer: 11,5,8"]}
            ]
        },
        {
            "exp07": [
                {"prompt_id": "SYSTEM_MSG_2"},
                {"prompt_id":"SHORTEST_PATH_WITHIN_CLUSTER_DFS", "expected_answer": ["Answer: 11, 14, 8", "Answer: 11, 2, 8", "Answer: 11, 5, 8", "Answer: 11,14,8", "Answer: 11,2,8", "Answer: 11,5,8"]}
            ]
        },
        {
            "exp03": [
                {"prompt_id": "SYSTEM_MSG_2"},
                {"prompt_id":"SHORTEST_PATH_ONE_CLUSTER_AWAY", "expected_answer": ["Answer: 1, 7, 4, 15, 12", "Answer: 1, 10, 4, 15, 12", "Answer: 1, 13, 4, 15, 12", "Answer: 1,7,4,15,12", "Answer: 1,10,4,15,12", "Answer: 1,13,4,15,12"]}
            ]                
        },
        {
            "exp08": [
                {"prompt_id": "SYSTEM_MSG_2"},
                {"prompt_id":"SHORTEST_PATH_ONE_CLUSTER_AWAY_BFS", "expected_answer": ["Answer: 1, 7, 4, 15, 12", "Answer: 1, 10, 4, 15, 12", "Answer: 1, 13, 4, 15, 12", "Answer: 1,7,4,15,12", "Answer: 1,10,4,15,12", "Answer: 1,13,4,15,12"]}
            ]                
        },
        {
            "exp09": [
                {"prompt_id": "SYSTEM_MSG_2"},
                {"prompt_id":"SHORTEST_PATH_ONE_CLUSTER_AWAY_DFS", "expected_answer": ["Answer: 1, 7, 4, 15, 12", "Answer: 1, 10, 4, 15, 12", "Answer: 1, 13, 4, 15, 12", "Answer: 1,7,4,15,12", "Answer: 1,10,4,15,12", "Answer: 1,13,4,15,12"]}
            ]                
        },
        {
            "exp01": [
                {"prompt_id": "SYSTEM_MSG_1"},
                {"prompt_id":"CLUSTER_COUNT", "expected_answer": "Answer: there are 3 clusters"},
                {"prompt_id": "MAP_REPRESENTATION"}
            ]
        },
        {
            "exp04": [
                {"prompt_id": "SYSTEM_MSG_1"},
                {"prompt_id":"CLUSTER_COUNT_BFS", "expected_answer": "Answer: there are 3 clusters"},
                {"prompt_id": "MAP_REPRESENTATION"}
            ]
        },
        {
            "exp05": [
                {"prompt_id": "SYSTEM_MSG_1"},
                {"prompt_id":"CLUSTER_COUNT_DFS", "expected_answer": "Answer: there are 3 clusters"},
                {"prompt_id": "MAP_REPRESENTATION"}
            ]
        }
    ]
}